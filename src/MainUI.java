
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Toshiba
 */
public class MainUI extends javax.swing.JFrame {

    String fileName = "";
    String invertFileName = "";
    ArrayList<String> outItems = new ArrayList<String>();
       ArrayList<Integer> outItemsFinalCounts = new ArrayList<Integer>();
    public MainUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        items = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        cap = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Select Captcha");

        jButton1.setText("CLICK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("INVERT MATRIX");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("GENERATE OTP");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("2nd level OTP");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("3rd level OTP");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        cap.setText("CAPATCHA POPULATION");
        cap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jButton1)))
                        .addGap(36, 36, 36)
                        .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(26, 26, 26)
                .addComponent(cap)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(28, 28, 28)
                .addComponent(jButton4)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(cap))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try{
       
       JFileChooser  fileDialog = new JFileChooser();
       int returnVal = fileDialog.showOpenDialog(this);
       fileName = "";
        if (returnVal == JFileChooser.APPROVE_OPTION){
            java.io.File file = fileDialog.getSelectedFile();
            fileName = file.getAbsolutePath();
        }
       System.out.println(fileName);
       
       FileOutputStream fos = new FileOutputStream("file.txt");
       fos.write(fileName.getBytes());
       fos.close();
       
       }catch(Exception e){
           System.out.println(e);
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try{
       JFileChooser  fileDialog = new JFileChooser(".");
       int returnVal = fileDialog.showOpenDialog(this);
       invertFileName = "";
        if (returnVal == JFileChooser.APPROVE_OPTION){
            java.io.File file = fileDialog.getSelectedFile();
            invertFileName = file.getAbsolutePath();
        }
       System.out.println(invertFileName);
       Runtime r = Runtime.getRuntime();
       r.exec("notepad "+invertFileName);
       
       
       JOptionPane.showMessageDialog(null,"File choosen and click ok to generate invert matrix and OTP");
       
       FileInputStream fis = new FileInputStream(invertFileName);
       byte bb[] = new byte[fis.available()];
       fis.read(bb);
       fis.close();
       
       String originalString = new String(bb);
       
       outItems.clear();
       
       outItemsFinalCounts.clear();
       String str = originalString;
       
       str = str.replaceAll("\r\n", " ");
       System.out.println(str);
       ArrayList<String> wholeData = new ArrayList<String>();
       wholeData.clear();
       
       StringTokenizer st = new StringTokenizer(str," ");
       while(st.hasMoreTokens()){
           wholeData.add(st.nextToken());
       }
       ArrayList<String> unique = new ArrayList<String>();
       unique.clear();
       unique = (ArrayList<String>)wholeData.clone();
       Set set = new HashSet(unique);
       unique.clear();
       unique.addAll(set);
       
       ArrayList<Integer> allWeights = new ArrayList<Integer>();
       allWeights.clear();
       allWeights = new SetGetWeights().setWeights(unique);
       
       for(int i=0;i<allWeights.size();i++){
           System.out.println(unique.get(i)+"   "+allWeights.get(i));
       }
        System.out.println("---------------------------------");
       ArrayList<Integer> allReps = new ArrayList<Integer>();
       allReps.clear();
       for(int i=0;i<wholeData.size();i++){
           String data = wholeData.get(i);
           int index = unique.indexOf(data);
           int value = allWeights.get(index);
           allReps.add(value);
       }
       for(int i=0;i<allReps.size();i++){
           System.out.print(allReps.get(i));
           System.out.print("\t");
       }
       System.out.println();
       for(int i=0;i<wholeData.size();i++){
           System.out.print(wholeData.get(i));
           System.out.print("\t");
       }
       System.out.println();
       System.out.println("---------------------------------");
       
       ArrayList<String> invertMatrix = new ArrayList<String>();
       invertMatrix.clear();
       
       ArrayList<String> neighbourItems = new ArrayList<String>();
       neighbourItems.clear();
       int count = 0;
       String invertString = "";
       for(int i=0;i<unique.size();i++){
           String outerItem = unique.get(i);
           for(int j=0;j<wholeData.size()-1;j++){
              String innerItem = wholeData.get(j);
              if(innerItem.equals(outerItem)){
                  neighbourItems.add(wholeData.get(j+1));
              }
           }
           ArrayList<String> neighbourUniqueItems = new ArrayList<String>();
           neighbourUniqueItems.clear();
           neighbourUniqueItems = (ArrayList<String>)neighbourItems.clone();
           Set set1 = new HashSet(neighbourUniqueItems);
           neighbourUniqueItems.clear();
           neighbourUniqueItems.addAll(set1);
           
           for(int k=0;k<neighbourUniqueItems.size();k++){
               String nUnique = neighbourUniqueItems.get(k);
               int frequency = Collections.frequency(neighbourItems,nUnique);
               for(int l=0;l<frequency;l++){
                   int index = unique.indexOf(nUnique);
                   int value = allWeights.get(index);
                   ++count;
                   invertString = invertString +outerItem+"["+value+","+count+"]"+"  ";
               }
               
               outItems.add(outerItem);
               outItemsFinalCounts.add(count);
               invertMatrix.add(invertString);
           neighbourItems.clear();
           neighbourUniqueItems.clear();
           count = 0;
           invertString = "";
           }
       }
       //System.out.println("---------------------------------");
       for(int i=0;i<invertMatrix.size();i++){
           System.out.println(invertMatrix.get(i));
       }
       System.out.println("---------------------");
       System.out.println(outItems);
       System.out.println(outItemsFinalCounts);
       
       
       //
       String totalInvertMatrixString  = "";
       for(int i=0;i<invertMatrix.size();i++){
           totalInvertMatrixString += invertMatrix.get(i)+"\r\n";
       }
       totalInvertMatrixString = totalInvertMatrixString.trim();
       
       MatrixResultWindow mw = new MatrixResultWindow(totalInvertMatrixString);
       mw.setVisible(true);
       
       for(int i=0;i<outItems.size();i++){
           items.addItem(outItems.get(i));
       }
       
       
       
       
       //
       }catch(Exception e){
           System.out.println(e);
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
        
            String selItem = items.getSelectedItem().toString();
            int index = outItems.indexOf(selItem);
            int prevIndex = 0;
            int nextIndex = 0;
            if(index ==0){
            prevIndex = index + 1;
            nextIndex = index + 2;
            }
            else if(index == outItems.size()){
            prevIndex = index - 1;
            nextIndex = index - 2;
            }
            else{
                prevIndex = index - 1;
                nextIndex = index + 1;
            }
            
            String totalOtpString = outItemsFinalCounts.get(index)+""+outItemsFinalCounts.get(prevIndex)+""+outItemsFinalCounts.get(nextIndex);
            System.out.println(totalOtpString);
            
            int length = totalOtpString.length();
            if(length == 3){
                int total = outItemsFinalCounts.get(index) + outItemsFinalCounts.get(prevIndex) + outItemsFinalCounts.get(nextIndex);
             //int ran= (int)(Math.random() * ((9 - 1) + 1));  
             int ran = total/3;
             totalOtpString += ""+ran;
            }
            else if(length >4){
              totalOtpString = totalOtpString.substring(0,3) ; 
            }
            System.out.println(totalOtpString);
            FileOutputStream fos = new FileOutputStream("flotp.txt");
            ObjectOutputStream os = new ObjectOutputStream(fos);
            os.writeObject(totalOtpString);
            os.close();
            fos.close();
            JOptionPane.showMessageDialog(null,"your first level invert matrix based otp is generated and serialized");
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
        String mainString = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
        int length = mainString.length();
        
        int firstRan = 0;
        int secondRan = 0;
        int thirdRan = 0 ;
        int fourthRan = 0;
        
        firstRan = (int)(Math.random() * ((length - 1) + 1));
        secondRan = (int)(Math.random() * ((length - 1) + 1));
        thirdRan = (int)(Math.random() * ((length - 1) + 1));
        fourthRan = (int)(Math.random() * ((length - 1) + 1));

        System.out.println(firstRan+":"+secondRan+":"+thirdRan+":"+fourthRan);
        
        ArrayList<Integer> allRanOffsets = new ArrayList<Integer>();
        allRanOffsets.clear();
        allRanOffsets.add(firstRan);
        allRanOffsets.add(secondRan);
        allRanOffsets.add(thirdRan);
        allRanOffsets.add(fourthRan);
        Collections.shuffle(allRanOffsets);
        System.out.println(allRanOffsets);
        
        String secondLevelOTP = "";

        for(int i=0;i<allRanOffsets.size();i++){
            int offSet = allRanOffsets.get(i);
            GetKey gk = new GetKey();
            String otp = gk.getKey(offSet);
            secondLevelOTP += otp;
        }
        System.out.println(secondLevelOTP);
        FileOutputStream fos = new FileOutputStream("slotp.txt");
        ObjectOutputStream os = new ObjectOutputStream(fos);
        os.writeObject(secondLevelOTP);
        os.close();
        fos.close();
        JOptionPane.showMessageDialog(null,"your second level invert matrix based otp is generated and serialized");
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       try{
       
       FileInputStream fis = new FileInputStream("rota/words.txt");
       byte bb[] = new byte[fis.available()];
       fis.read(bb);
       fis.close();
       String data = new String(bb);
       data = data.trim();
       ArrayList<String> allWords = new ArrayList<String>();
       allWords.clear();
       StringTokenizer st = new StringTokenizer(data,"\r\n");
       while(st.hasMoreTokens()){
           allWords.add(st.nextToken());
       }
       
       int ran= (int)(Math.random() * ((allWords.size() - 1) + 1));
       String beforeEncr = allWords.get(ran);
       Rota rota = new Rota();
       byte bbb[] = rota.decode(beforeEncr);
       String thirdLevelOTP = new String(bbb);
       System.out.println(thirdLevelOTP);
       FileOutputStream fos = new FileOutputStream("thotp.txt");
       ObjectOutputStream os = new ObjectOutputStream(fos);
       os.writeObject(thirdLevelOTP);
       os.close();
       fos.close();
       
       FileOutputStream fosTem = new FileOutputStream("ddd.txt");
       fosTem.write(thirdLevelOTP.getBytes());
       fosTem.close();
       Runtime r = Runtime.getRuntime();
       r.exec("notepad ddd.txt");
       
       JOptionPane.showMessageDialog(null,"your third level invert matrix based otp is generated and serialized");
       cap.setEnabled(true);
       }catch(Exception e ){
           System.out.println(e);
       }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
       try{
//       jButton4.setEnabled(false);
//       jButton5.setEnabled(false);
//       cap.setEnabled(false);
       
       
       }catch(Exception e ){
           cap.setEnabled(false);
       }
    }//GEN-LAST:event_formComponentShown

    private void capActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capActionPerformed
        try{
        CAPATCHA capatcha = new CAPATCHA();
        capatcha.setVisible(true);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_capActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cap;
    private javax.swing.JComboBox<String> items;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
